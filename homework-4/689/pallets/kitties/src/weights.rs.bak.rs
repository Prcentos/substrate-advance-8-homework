
//! Autogenerated weights for `pallet_kitties`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 32.0.0
//! DATE: 2024-09-24, STEPS: `20`, REPEAT: `10`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `192.168.2.159`, CPU: `<UNKNOWN>`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: 1024

// Executed Command:
// ./target/release/solochain-template-node
// benchmark
// pallet
// --chain
// dev
// --pallet
// pallet_kitties
// --extrinsic
// *
// --steps
// 20
// --repeat
// 10
// --output
// pallets/kitties/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_kitties`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_kitties::WeightInfo for WeightInfo<T> {
	/// Storage: `Kitties::NextKittyId` (r:1 w:1)
	/// Proof: `Kitties::NextKittyId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Kitties::Kitties` (r:0 w:1)
	/// Proof: `Kitties::Kitties` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `Kitties::KittyOwner` (r:0 w:1)
	/// Proof: `Kitties::KittyOwner` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	fn create() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `147`
		//  Estimated: `1489`
		// Minimum execution time: 53_000_000 picoseconds.
		Weight::from_parts(53_000_000, 0)
			.saturating_add(Weight::from_parts(0, 1489))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `Kitties::Kitties` (r:2 w:1)
	/// Proof: `Kitties::Kitties` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `Kitties::KittyOwner` (r:2 w:1)
	/// Proof: `Kitties::KittyOwner` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Kitties::NextKittyId` (r:1 w:1)
	/// Proof: `Kitties::NextKittyId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn breed() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `404`
		//  Estimated: `6044`
		// Minimum execution time: 76_000_000 picoseconds.
		Weight::from_parts(80_000_000, 0)
			.saturating_add(Weight::from_parts(0, 6044))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `Kitties::Kitties` (r:1 w:0)
	/// Proof: `Kitties::Kitties` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `Kitties::KittyOwner` (r:1 w:1)
	/// Proof: `Kitties::KittyOwner` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	fn transfer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `305`
		//  Estimated: `3517`
		// Minimum execution time: 70_000_000 picoseconds.
		Weight::from_parts(71_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3517))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Kitties::Kitties` (r:1 w:0)
	/// Proof: `Kitties::Kitties` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `Kitties::KittiesSaleInfo` (r:1 w:1)
	/// Proof: `Kitties::KittiesSaleInfo` (`max_values`: None, `max_size`: Some(40), added: 2515, mode: `MaxEncodedLen`)
	/// Storage: `Kitties::KittiesBid` (r:1 w:1)
	/// Proof: `Kitties::KittiesBid` (`max_values`: None, `max_size`: Some(48022), added: 50497, mode: `MaxEncodedLen`)
	/// Storage: `Kitties::KittyOwner` (r:1 w:0)
	/// Proof: `Kitties::KittyOwner` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	fn sale() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `305`
		//  Estimated: `51487`
		// Minimum execution time: 44_000_000 picoseconds.
		Weight::from_parts(50_000_000, 0)
			.saturating_add(Weight::from_parts(0, 51487))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `Kitties::Kitties` (r:1 w:0)
	/// Proof: `Kitties::Kitties` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `Kitties::KittyOwner` (r:1 w:0)
	/// Proof: `Kitties::KittyOwner` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Kitties::KittiesSaleInfo` (r:1 w:0)
	/// Proof: `Kitties::KittiesSaleInfo` (`max_values`: None, `max_size`: Some(40), added: 2515, mode: `MaxEncodedLen`)
	/// Storage: `Kitties::KittiesBid` (r:1 w:1)
	/// Proof: `Kitties::KittiesBid` (`max_values`: None, `max_size`: Some(48022), added: 50497, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn bid() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `511`
		//  Estimated: `51487`
		// Minimum execution time: 77_000_000 picoseconds.
		Weight::from_parts(79_000_000, 0)
			.saturating_add(Weight::from_parts(0, 51487))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(2))
	}
}
